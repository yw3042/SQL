/* 
primary key 
A primary key is a column or a group of columns
that is used to identify a row uniquely in a table

Defind primary keys through primary key constraints

A foreign key is a field or group of fields in a table
that uniquely identifies in a row in another table.

The table that contains the foreign key is callled referencing table

A foregin key constraint maintains referential integrity between
child and parent



Create table

create table table_name
(column_name type column_ constraints, table_constraint)
inherits existing_table_name;

column constraints
Not null
Unique( value could be null)

check_enable to check a condition 
references- to constrain the value stored in th column that must
exist in a column in another table
*/

create table account(
user_id serial primary key,
username VARCHAR(50) UNIQUE NOT NULL,
password VARCHAR(50) NOT NULL,
email VARCHAR(355) UNIQUE NOT NULL,
created_on TIMESTAMP NOT NULL,
last_login TIMESTAMP
);

CREATE TABLE role(
role_id serial PRIMARY KEY,
role_name VARCHAR (255) UNIQUE NOT NULL
);

create table account_role(
user_id integer not null,
role_id integer not null,
grant_date timestamp without time zone,
primary key (user_id,role_id),
CONSTRAINT account_role_role_id_fkey FOREIGN KEY (role_id)
      REFERENCES role (role_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT account_role_user_id_fkey FOREIGN KEY (user_id)
      REFERENCES account (user_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

create table leads(
user_id serial primary key,
first_name VARCHAR(50) NOT NULL,
last_name VARCHAR(50) NOT NULL,
email VARCHAR(355) UNIQUE NOT NULL,
minutes integer NOT NULL,
sign_up_ts TIMESTAMP NOT NULL
);


/*insert

insert into table( column1, column2,..)
values(value1, value2,...)
      (value1, value2,...)...;

insert into table
select column1, column2,...
from another_table
where condition;
*/


create table link(
ID serial primary key,
url VARCHAR(255) not null,
name VARCHAR(255) not null,
description VARCHAR(255),
rel VARCHAR(50)
);

select * from link;

Insert into link(url,name)
Values
('www.google,com','Google');

Insert into link(url,name)
values
('www.yahoo.com','Yahoo');


Insert into link(url,name)
values
('www.bing.com','Bing'),
('www.amazon.com','Amazon');

/* create table with same structure*/
create table link_copy(LIKE link);

select * from link_copy;

Insert into link_copy
select * from link
where name ='Bing';

select * from link_copy;

/* update

update 
set column1=value1,
column2 =value2,...
where condition;
*/

select * from link;

update link 
set description = 'Empty Description';

Insert into link(url,name)
values
('www.A.com','A'),
('www.B.com','B');


update link
set description = 'Name starts with an A'
where name like 'A%';

update link 
set description = name;

update link
set description = 'New Description'
where id = 1
returning id, url, name, description;

/* delete

delete from table
where condition

*/


select * from link;

delete from link
where name like 'B%';

delete from link
where name = 'A'
RETURNING *;

/* Alter table 
-add column
-drop column
-rename column
-add constraint
-rename to 
*/

drop table if exists link;

create table link(
link_id serial primary key,
title VARCHAR(512) not null,
url VARCHAR(1024) not null unique);

select * from link;
Alter table link Add column active boolean;

ALTER TABLE link drop column active;

alter table link rename column title to new_title_name;

alter table link rename to url_table;

select * from url_table;


/* drop table

drop table is exists table_name;

*/

create table test_two(
test_id serial primary key

);

select * from test_two;

drop table if exists test_two;

drop table if exists test_two restrict;
/*remove the dependent objects together*/
drop table if exists test_two cascade;


/*
check constraint is a kidn of constraint that allows you
to specify if a value in a column must meet a specific
requirement
*/

create table new_users(
id serial primary key,
first_name varchar(50),
birth_date date check(birth_date >'1900-01-01'),
join_date date check(join_date > birth_date),
salary integer check( salary >0)
);

select * from new_users;

insert into new_users(first_name, birth_date, join_date,salary)
values('Joe','1980-02-02','1990-04-04',10);

create table checktest(
sales integer constraint positive_sales check(sales >0 ));


insert into checktest(sales)
values (10);

insert into checktest(sales)
values (-10);


/* null value
null is unknown or missing information
*/
											  
create table learn_null(
first_name varchar(50),
sales integer not null);											  

select * from learn_null;											  
											  
insert into learn_null(first_name,sales)
values('John',12);											 
											  
/* unique constrait*/
create table people(
id serial primary key,											  											  
first_name varchar(50),
email varchar(100) unique);											  
											  
select * from people;										

insert into people( id, first_name,email)
values(1,'Joe','joe@joe.com');

insert into people( id, first_name,email)
values(2,'joseph','joe@joe.com');										  
											  